@model DocumentModel
@using Nop.Plugin.Misc.WarehouseManagement.Models;
<script>
    $(document).ready(function() {
        bindBootstrapTabSelectEvent('document-edit');
    });
</script>

<div class="content">
    <div class="form-horizontal">
        <div id="document-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Plugin.Misc.WarehouseManagement.Document.Head"), true)
                @Html.RenderBootstrapTabHeader("tab-products", @T("Plugin.Misc.WarehouseManagement.Document.Body"))                
                @if (Model.Entity.DocumentType.MultipleHead)
                {
                    @Html.RenderBootstrapTabHeader("tab-customers", @T("Plugin.Misc.WarehouseManagement.Document.Customers"))
                }               
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                @Html.RenderBootstrapTabContent("tab-products", @TabProducts())
                @if (Model.Entity.DocumentType.MultipleHead)
                {
                    @Html.RenderBootstrapTabContent("tab-customers", @TabCustomers())
                } 
            </div>
        </div>
    </div>
</div>
@helper TabInfo()
{
    if (!Model.Entity.DocumentType.MultipleHead)
    {
        <button type="button" class="btn bg-green" data-toggle="modal" data-target="#customerFind-window">
            <i class="fa fa-at"></i>
            Customer
        </button>
    }
}
@helper TabProducts()
{
    <div id="productsGrid"
         data-role="grid"
         data-toolbar="['create']"
         data-bind="source: productsDataSource"
         data-columns='["Description","Qty" ,"Price","Discount, "Taxes", "Total", { "command": ["edit", "destroy"] }]' data-editable="inline"></div>
}
@helper TabCustomers()
{
    <div id="customersGrid"
         data-role="grid"
         data-toolbar="['create']"
         data-bind="source: customersDataSource"
         data-columns='["Name", "Surname", "Company", "Vat", { "command": ["edit", "destroy"] }]' data-editable="inline"></div>
	
}

<div id="customerFind-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="customerFind-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="sendemail-window-title">@T("Admin.Customers.Customers.SendEmail")</h4>
            </div>           
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        
        var customersDataSource = new kendo.data.DataSource({
            transport: {
                read: function (operation) {
                    var data = operation.data.data || [];
                    operation.success(data);
                },
                create: function (object) {
                    viewModel.Customers.read({ data: viewModel.Document.Customers });
                }
            },
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Name: { type: "string" },
                        Surname: { type: "string" },
                        Company: { type: "string" },
                        Vat: { type: "string" }
                    }
                }
            }
        });

        var productsDataSource = new kendo.data.DataSource({
            transport: {
                read: function (operation) {
                    var data = operation.data.data || [];
                    operation.success(data);
                },
                create: function (object) {
                    viewModel.ProductsDataSource.read({ data: viewModel.Document.Products });
                }
            },
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        ProductID: { type: "Description", editable: false, nullable: true },
                        Qty: { type: "number" },
                        Price: { type: "number" },
                        Discount: { type: "number" },
                        Total: { type: "number" },
                    }
                }
            }
        })

        var viewModel = kendo.observable({
            Document: null,
            Customers: customersDataSource,
            Products: productsDataSource
        });
    });

    




    @*function SaveECF() {
    $.ajax({
        url: '@Url.Action("SaveECFProperty", "ECFProperty", Request.RequestContext.RouteData.Values)',
        type: 'POST',
        traditional: true,
        dataType: "json",
        contentType: "application/json",
        data: kendo.stringify({
            propertyList:  PropertyList: $("#ECFProperty").data("kendoGrid").dataSource.view().toJSON(),
            currency: 'USD'
        }),
        success: function () { window.alert('saved'); }
    });
}*@
</script>

