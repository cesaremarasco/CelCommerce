@using Nop.Plugin.Misc.WarehouseManagement.Models;
@model DocumentCoreModel
<div>
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @if (Model.Id == 0)
            {
                <span>Nuovo @Model.DocumentType.Description</span>
            }
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            <button type="submit" name="save-continue" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.SaveContinue")
            </button>
        </div>
    </div>
    <!-- TabStrip -->
    <div class="content">
        <div class="form-horizontal">
            <div id="document-edit" class="nav-tabs-custom">
                <!-- Navigation Tabs -->
                <ul class="nav nav-tabs">
                    @Html.RenderBootstrapTabHeader("tab-info", @T("Plugin.Misc.WarehouseManagement.Document.Head"), true)
                    @Html.RenderBootstrapTabHeader("tab-products", @T("Plugin.Misc.WarehouseManagement.Document.Body"))
                    @if (Model.DocumentType.MultipleHead)
                    {
                        @Html.RenderBootstrapTabHeader("tab-customers", @T("Plugin.Misc.WarehouseManagement.Document.Customers"))
                    }
                </ul>
                <!-- Content Tabs -->
                <div class="tab-content">
                    @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                    @Html.RenderBootstrapTabContent("tab-products", @TabProducts())
                    @if (Model.DocumentType.MultipleHead)
                    {
                        @Html.RenderBootstrapTabContent("tab-customers", @TabCustomers())
                    }
                </div>
            </div>
        </div>
    </div>

    @helper TabInfo()
    {
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="col-md-5">
                    <div class="form-group">
                        <div class="col-md-4">
                            @T("Plugin.Misc.WarehouseManagement.Document.PaymentType")
                        </div>
                        <div id="wmDocumentViewContainer" class="col-md-8">
                            <input data-role="dropdownlist"
                                   data-auto-bind="false"
                                   data-value-primitive="true"
                                   data-text-field="Description"
                                   data-value-field="SystemName"
                                   data-bind="value: Document.Entity.Footer.PaymentCode,
                                                  source: Document.PaymentMethods
                                                  }"
                                   class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="col-md-7">

                </div>
            </div>
        </div>
    </div>

if (!Model.DocumentType.MultipleHead)
{
        @*<button type="button" class="btn bg-green" data-toggle="modal" data-target="#customerFind-window">
                <i class="fa fa-at"></i>
                Customer
            </button>*@
}
}
    @helper TabProducts()
    {
    <div id="productsGrid"
         data-role="grid"
         data-toolbar="['create']"
         data-bind="source: productsDataSource"
         data-columns='["Description","Qty" ,"Price","Discount, "Taxes", "Total", { "command": ["edit", "destroy"] }]' data-editable="inline"></div>
}
    @helper TabCustomers()
    {
    <div id="customersGrid"
         data-role="grid"
         data-toolbar="['create']"
         data-bind="source: customersDataSource"
         data-columns='["Name", "Surname", "Company", "Vat", { "command": ["edit", "destroy"] }]' data-editable="inline"></div>

}
    <!-- Modal Windows -->
    <div id="customerFind-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="customerFind-window-title">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="sendemail-window-title">@T("Admin.Customers.Customers.SendEmail")</h4>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {

            var customersDataSource = new kendo.data.DataSource({
                transport: {
                    read: function (operation) {
                        var data = operation.data.data || [];
                        operation.success(data);
                    },
                    create: function (object) {
                        viewModel.Customers.read({ data: viewModel.Document.Customers });
                    }
                },
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Name: { type: "string" },
                            Surname: { type: "string" },
                            Company: { type: "string" },
                            Vat: { type: "string" }
                        }
                    }
                }
            });

            var productsDataSource = new kendo.data.DataSource({
                transport: {
                    read: function (operation) {
                        var data = operation.data.data || [];
                        operation.success(data);
                    },
                    create: function (object) {
                        viewModel.ProductsDataSource.read({ data: viewModel.Document.Products });
                    }
                },
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            ProductID: { type: "Description", editable: false, nullable: true },
                            Qty: { type: "number" },
                            Price: { type: "number" },
                            Discount: { type: "number" },
                            Total: { type: "number" },
                        }
                    }
                }
            })

            var viewModel = kendo.observable({
                Document: null
            });


            $.ajax({
                url: '@Url.Action("DocumentJsonPayLoad", "MiscDocumentManagement", new { idDocType = Model.DocumentType.Id, documentId = Model.Id })',
                type: 'GET',
                dataType: "json",
                contentType: "application/json",
                success: function (payLoad) {
                    debugger;
                    viewModel.Document = payLoad;
                    kendo.bind($("#wmDocumentViewContainer"), viewModel); 
                },
                error: function (error) {
                    debugger;
                }
            })

        });






        @*function SaveECF() {
    $.ajax({
        url: '@Url.Action("SaveECFProperty", "ECFProperty", Request.RequestContext.RouteData.Values)',
        type: 'POST',
        traditional: true,
        dataType: "json",
        contentType: "application/json",
        data: kendo.stringify({
            propertyList:  PropertyList: $("#ECFProperty").data("kendoGrid").dataSource.view().toJSON(),
            currency: 'USD'
        }),
        success: function () { window.alert('saved'); }
    });
}*@
    </script>
</div>

